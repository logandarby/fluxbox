#pragma once

#include <array>
#include "glm/glm.hpp"
#include "../BufferLayout.h"

struct NormalCubeModel {
	std::array<PosNormalTexture3D, 36> m_points = { {
    { {-0.5f, -0.5f, -0.5f, }, { 0.0f, 0.0f, }, { 0.0f,  0.0f, -1.0f, }, },
    { { 0.5f, -0.5f, -0.5f, }, { 1.0f, 0.0f, }, { 0.0f,  0.0f, -1.0f, }, },
    { { 0.5f,  0.5f, -0.5f, }, { 1.0f, 1.0f, }, { 0.0f,  0.0f, -1.0f, }, },
    { { 0.5f,  0.5f, -0.5f, }, { 1.0f, 1.0f, }, { 0.0f,  0.0f, -1.0f, }, },
    { {-0.5f,  0.5f, -0.5f, }, { 0.0f, 1.0f, }, { 0.0f,  0.0f, -1.0f, }, },
    { {-0.5f, -0.5f, -0.5f, }, { 0.0f, 0.0f, }, { 0.0f,  0.0f, -1.0f, }, },
    { {-0.5f, -0.5f,  0.5f, }, { 0.0f, 0.0f, }, { 0.0f,  0.0f, 1.0f,  }, },
    { { 0.5f, -0.5f,  0.5f, }, { 1.0f, 0.0f, }, { 0.0f,  0.0f, 1.0f,  }, },
    { { 0.5f,  0.5f,  0.5f, }, { 1.0f, 1.0f, }, { 0.0f,  0.0f, 1.0f,  }, },
    { { 0.5f,  0.5f,  0.5f, }, { 1.0f, 1.0f, }, { 0.0f,  0.0f, 1.0f,  }, },
    { {-0.5f,  0.5f,  0.5f, }, { 0.0f, 1.0f, }, { 0.0f,  0.0f, 1.0f,  }, },
    { {-0.5f, -0.5f,  0.5f, }, { 0.0f, 0.0f, }, { 0.0f,  0.0f, 1.0f,  }, },
    { {-0.5f,  0.5f,  0.5f, }, { 1.0f, 0.0f, }, {-1.0f,  0.0f,  0.0f, }, },
    { {-0.5f,  0.5f, -0.5f, }, { 1.0f, 1.0f, }, {-1.0f,  0.0f,  0.0f, }, },
    { {-0.5f, -0.5f, -0.5f, }, { 0.0f, 1.0f, }, {-1.0f,  0.0f,  0.0f, }, },
    { {-0.5f, -0.5f, -0.5f, }, { 0.0f, 1.0f, }, {-1.0f,  0.0f,  0.0f, }, },
    { {-0.5f, -0.5f,  0.5f, }, { 0.0f, 0.0f, }, {-1.0f,  0.0f,  0.0f, }, },
    { {-0.5f,  0.5f,  0.5f, }, { 1.0f, 0.0f, }, {-1.0f,  0.0f,  0.0f, }, },
    { { 0.5f,  0.5f,  0.5f, }, { 1.0f, 0.0f, }, { 1.0f,  0.0f,  0.0f, }, },
    { { 0.5f,  0.5f, -0.5f, }, { 1.0f, 1.0f, }, { 1.0f,  0.0f,  0.0f, }, },
    { { 0.5f, -0.5f, -0.5f, }, { 0.0f, 1.0f, }, { 1.0f,  0.0f,  0.0f, }, },
    { { 0.5f, -0.5f, -0.5f, }, { 0.0f, 1.0f, }, { 1.0f,  0.0f,  0.0f, }, },
    { { 0.5f, -0.5f,  0.5f, }, { 0.0f, 0.0f, }, { 1.0f,  0.0f,  0.0f, }, },
    { { 0.5f,  0.5f,  0.5f, }, { 1.0f, 0.0f, }, { 1.0f,  0.0f,  0.0f, }, },
    { {-0.5f, -0.5f, -0.5f, }, { 0.0f, 1.0f, }, { 0.0f, -1.0f,  0.0f, }, },
    { { 0.5f, -0.5f, -0.5f, }, { 1.0f, 1.0f, }, { 0.0f, -1.0f,  0.0f, }, },
    { { 0.5f, -0.5f,  0.5f, }, { 1.0f, 0.0f, }, { 0.0f, -1.0f,  0.0f, }, },
    { { 0.5f, -0.5f,  0.5f, }, { 1.0f, 0.0f, }, { 0.0f, -1.0f,  0.0f, }, },
    { {-0.5f, -0.5f,  0.5f, }, { 0.0f, 0.0f, }, { 0.0f, -1.0f,  0.0f, }, },
    { {-0.5f, -0.5f, -0.5f, }, { 0.0f, 1.0f, }, { 0.0f, -1.0f,  0.0f, }, },
    { {-0.5f,  0.5f, -0.5f, }, { 0.0f, 1.0f, }, { 0.0f,  1.0f,  0.0f, }, },
    { { 0.5f,  0.5f, -0.5f, }, { 1.0f, 1.0f, }, { 0.0f,  1.0f,  0.0f, }, },
    { { 0.5f,  0.5f,  0.5f, }, { 1.0f, 0.0f, }, { 0.0f,  1.0f,  0.0f, }, },
    { { 0.5f,  0.5f,  0.5f, }, { 1.0f, 0.0f, }, { 0.0f,  1.0f,  0.0f, }, },
    { {-0.5f,  0.5f,  0.5f, }, { 0.0f, 0.0f, }, { 0.0f,  1.0f,  0.0f, }, },
    { {-0.5f,  0.5f, -0.5f, }, { 0.0f, 1.0f, }, { 0.0f,  1.0f,  0.0f, }, }
	} };
	std::array<unsigned int, 36> m_indices;
	glm::mat4 modelMatrix = glm::mat4(1.0f);

    NormalCubeModel() {
        for (int i = 0; i < m_indices.size(); i++) {
            m_indices[i] = i;
        }
    }
};
#pragma once
