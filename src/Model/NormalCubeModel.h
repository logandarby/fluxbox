#pragma once

#include "Renderer/BufferLayout.h"
#include "glm/glm.hpp"
#include <array>

// clang-format off
struct NormalCubeModel {
    std::array<PosNormalTexture3D, 36> m_points = { {
        { { -0.5, -0.5, -0.5, }, { 0.0, 0.0, }, { 0.0, 0.0, -1.0, } },
        { { 0.5, -0.5, -0.5, }, { 1.0, 0.0, }, { 0.0, 0.0, -1.0, } },
        { { 0.5, 0.5, -0.5, }, { 1.0, 1.0, }, { 0.0, 0.0, -1.0, } },
        { { 0.5, 0.5, -0.5, }, { 1.0, 1.0, }, { 0.0, 0.0, -1.0, } },
        { { -0.5, 0.5, -0.5, }, { 0.0, 1.0, }, { 0.0, 0.0, -1.0, } },
        { { -0.5, -0.5, -0.5, }, { 0.0, 0.0, }, { 0.0, 0.0, -1.0, } },
        { { -0.5, -0.5, 0.5, }, { 0.0, 0.0, }, { 0.0, 0.0, 1.0, } },
        { { 0.5, -0.5, 0.5, }, { 1.0, 0.0, }, { 0.0, 0.0, 1.0, } },
        { { 0.5, 0.5, 0.5, }, { 1.0, 1.0, }, { 0.0, 0.0, 1.0, } },
        { { 0.5, 0.5, 0.5, }, { 1.0, 1.0, }, { 0.0, 0.0, 1.0, } },
        { { -0.5, 0.5, 0.5, }, { 0.0, 1.0, }, { 0.0, 0.0, 1.0, } },
        { { -0.5, -0.5, 0.5, }, { 0.0, 0.0, }, { 0.0, 0.0, 1.0, } },
        { { -0.5, 0.5, 0.5, }, { 1.0, 0.0, }, { -1.0, 0.0, 0.0, } },
        { { -0.5, 0.5, -0.5, }, { 1.0, 1.0, }, { -1.0, 0.0, 0.0, } },
        { { -0.5, -0.5, -0.5, }, { 0.0, 1.0, }, { -1.0, 0.0, 0.0, } },
        { { -0.5, -0.5, -0.5, }, { 0.0, 1.0, }, { -1.0, 0.0, 0.0, } },
        { { -0.5, -0.5, 0.5, }, { 0.0, 0.0, }, { -1.0, 0.0, 0.0, } },
        { { -0.5, 0.5, 0.5, }, { 1.0, 0.0, }, { -1.0, 0.0, 0.0, } },
        { { 0.5, 0.5, 0.5, }, { 1.0, 0.0, }, { 1.0, 0.0, 0.0, } },
        { { 0.5, 0.5, -0.5, }, { 1.0, 1.0, }, { 1.0, 0.0, 0.0, } },
        { { 0.5, -0.5, -0.5, }, { 0.0, 1.0, }, { 1.0, 0.0, 0.0, } },
        { { 0.5, -0.5, -0.5, }, { 0.0, 1.0, }, { 1.0, 0.0, 0.0, } },
        { { 0.5, -0.5, 0.5, }, { 0.0, 0.0, }, { 1.0, 0.0, 0.0, } },
        { { 0.5, 0.5, 0.5, }, { 1.0, 0.0, }, { 1.0, 0.0, 0.0, } },
        { { -0.5, -0.5, -0.5, }, { 0.0, 1.0, }, { 0.0, -1.0, 0.0, } },
        { { 0.5, -0.5, -0.5, }, { 1.0, 1.0, }, { 0.0, -1.0, 0.0, } },
        { { 0.5, -0.5, 0.5, }, { 1.0, 0.0, }, { 0.0, -1.0, 0.0, } },
        { { 0.5, -0.5, 0.5, }, { 1.0, 0.0, }, { 0.0, -1.0, 0.0, } },
        { { -0.5, -0.5, 0.5, }, { 0.0, 0.0, }, { 0.0, -1.0, 0.0, } },
        { { -0.5, -0.5, -0.5, }, { 0.0, 1.0, }, { 0.0, -1.0, 0.0, } },
        { { -0.5, 0.5, -0.5, }, { 0.0, 1.0, }, { 0.0, 1.0, 0.0, } },
        { { 0.5, 0.5, -0.5, }, { 1.0, 1.0, }, { 0.0, 1.0, 0.0, } },
        { { 0.5, 0.5, 0.5, }, { 1.0, 0.0, }, { 0.0, 1.0, 0.0, } },
        { { 0.5, 0.5, 0.5, }, { 1.0, 0.0, }, { 0.0, 1.0, 0.0, } },
        { { -0.5, 0.5, 0.5, }, { 0.0, 0.0, }, { 0.0, 1.0, 0.0, } },
        { { -0.5, 0.5, -0.5, }, { 0.0, 1.0, }, { 0.0, 1.0, 0.0, }} 
    } };
    std::array<unsigned int, 36> m_indices;
    glm::mat4 modelMatrix = glm::mat4(1.0);

    NormalCubeModel() {
        for (int i = 0; i < m_indices.size(); i++) {
            m_indices[i] = i;
        }
    }
};
#pragma once
